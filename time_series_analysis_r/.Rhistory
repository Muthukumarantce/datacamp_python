print(Nile)
#EXPLORING RAW TIME SERIES
# Print the Nile dataset
print(Nile)
# List the number of observations in the Nile dataset
length(Nile)
# Display the first 10 elements of the Nile dataset
head(Nile,n=10)
# Display the last 12 elements of the Nile dataset
tail(Nile,n=12)
plot(Nile)
# TIME SERIES - SEQUENCE OF DATA IN CHRONOLOGICAL ORDER
# IT IS AN OBJECT WHICH HAS TIME AS INDEX AND REPRESENTED IN X AXIS
#EXPLORING RAW TIME SERIES
# Print the Nile dataset
print(Nile)
# List the number of observations in the Nile dataset
length(Nile)
# Display the first 10 elements of the Nile dataset
head(Nile,n=10)
# Display the last 12 elements of the Nile dataset
tail(Nile,n=12)
# Plot the Nile data
plot(Nile)
# Plot the Nile data with xlab and ylab arguments
plot(Nile, xlab = "Year", ylab = "River Volume (1e9 m^{3})")
# Plot the Nile data with xlab, ylab, main, and type arguments
#Type ="b" means it includes both lines and points represented in graph
plot(Nile, xlab = "Year", ylab = "River Volume (1e9 m^{3})",main="Annual River Nile Volume at Aswan, 1871-1970",type="b")
# TIME SERIES - SEQUENCE OF DATA IN CHRONOLOGICAL ORDER
# IT IS AN OBJECT WHICH HAS TIME AS INDEX AND REPRESENTED IN X AXIS
# Basic Models
***
White noise
Random walk
Auto Regression
Simple Moving Average
***
#EXPLORING RAW TIME SERIES
# Print the Nile dataset
print(Nile)
# List the number of observations in the Nile dataset
length(Nile)
# Display the first 10 elements of the Nile dataset
head(Nile,n=10)
# Display the last 12 elements of the Nile dataset
tail(Nile,n=12)
# Plot the Nile data
plot(Nile)
# Plot the Nile data with xlab and ylab arguments
plot(Nile, xlab = "Year", ylab = "River Volume (1e9 m^{3})")
# Plot the Nile data with xlab, ylab, main, and type arguments
#Type ="b" means it includes both lines and points represented in graph
plot(Nile, xlab = "Year", ylab = "River Volume (1e9 m^{3})",main="Annual River Nile Volume at Aswan, 1871-1970",type="b")
plot(continuous_time_index,continuous_series, type = "b")
par(mfrow=c(2,1))
plot(continuous_time_index,continuous_series, type = "b")
cycle(AirPassengers)
plot(AirPassengers)
plot(AirPassengers)
plot(AirPassengers)
start(AirPassengers)
end(AirPassengers)
time(AirPassengers)
deltat(AirPassengers)
frequency(AirPassengers)
cycle(AirPassengers)
plot(Nile)
deltat(Nile)
frequency(Nile)
deltat(AirPassengers)
frequency(AirPassengers)
cycle(AirPassengers)
rm(AirPassengers)
plot(AirPassengers)
plot(AirPassengers)
start(AirPassengers)
end(AirPassengers)
time(AirPassengers)
deltat(AirPassengers)
frequency(AirPassengers)
cycle(AirPassengers)
str(AirPassengers)
v <- c(1,2,3)
is.ts(v)
v
as.ts(v)
as.ts(v,start=2008)
data_vector
data_vector <- runif(1,100)
data_vector <- runif(100,1,2)
data_vector <- runif(100,1,100)
plot(data_vector)
time_series <- ts(data_vector,start=2004,frequency = 4)
plot(time_series)
print(time_series)
is.ts(data_vector)
is.ts(AirPassengers,Nile)
is.ts(AirPassengers)
is.ts(EuStockMarkets)
plot(EuStockMarkets)
start(EuStockMarkets)
end(EuStockMarkets)
frequency(EuStockMarkets)
plot(EuStockMarkets)
ts.plot(EuStockMarkets,col=1:4,xlab="Year",ylab="Index value",main="Major European Stock Indices,"1991-1998")
ts.plot(EuStockMarkets,col=1:4,xlab="Year",ylab="Index value",main="Major European Stock Indices,1991-1998")
ts.plot(EuStockMarkets,col=1:4,xlab="Year",ylab="Index value",main="Major European Stock Indices,1991-1998") + legend("topleft",colnames(EuStockMarkets),lty=1,col=1:4,bty="n")
ts.plot(EuStockMarkets,col=1:4,xlab="Year",ylab="Index value",main="Major European Stock Indices,1991-1998") + legend("topleft",colnames(EuStockMarkets),lty=1,col=1:4,bty="n")
str(EuStockMarkets)
